import androidx.annotation.NonNull;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

// Java program to calculate MD5 hash value
public class Test {
	public static String getMd5(@NonNull String input)
	{
		try {

			// Static getInstance method is called with hashing MD5
			MessageDigest md = MessageDigest.getInstance("MD5");

			// digest() method is called to calculate message digest
			// of an input digest() return array of byte
			byte[] messageDigest = md.digest(input.getBytes());

			// Convert byte array into signum representation
			BigInteger no = new BigInteger(1, messageDigest);

			// Convert message digest into hex value
			StringBuilder hashtext = new StringBuilder(no.toString(16));
			while (hashtext.length() < 32) {
				hashtext.insert(0, "0");
			}
			return hashtext.toString();
		}

		// For specifying wrong message digest algorithms
		catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}

	// Driver code
	public static void main(String[] args) {
		String s = "GeeksForGeeks";
		System.out.println("Your HashCode Generated by MD5 is: " + getMd5(s));
		String gen=	generatePassword();
		System.out.println(gen);
		System.out.println(shuffle(gen));
	}

	@NonNull
public static String generateTwoChars(@NonNull String str){
	Random r = new Random();
	String  res=String.valueOf(str.charAt(r.nextInt(str.length())));
	res+=String.valueOf(str.charAt(r.nextInt(str.length())));
	return res;
}
@NonNull
public  static String generatePassword (){
	String upper="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	String lower=upper.toLowerCase();
	String digits="0123456789";
	String specialChars ="&'(-)=}]@^`[#~%*+-:;,?.ยง";
		return generateTwoChars(upper)+ generateTwoChars(lower)+ generateTwoChars(digits)+ generateTwoChars(specialChars);
}

	@NonNull
	public static String shuffle(@NonNull String input){
		List<Character> characters = new ArrayList<>();
		for(char c:input.toCharArray()){
			characters.add(c);
		}
		StringBuilder output = new StringBuilder(input.length());
		while(characters.size()!=0){
			int randPicker = (int)(Math.random()*characters.size());
			output.append(characters.remove(randPicker));
		}
		return output.toString();

	}

}
